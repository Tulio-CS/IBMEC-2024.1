Inicio
    Tipo M1: Matriz[1,...,7][1,...,7]Reais; // matriz de distância dos pontos
    Tipo V: Vetor[1,...,8]inteiro; // vetor da rota percorrida
    int: num_cidades,i,j, atual, cidade_mais_perto;
    Real: Menor, distacia_percorrida;
    M1: distancias;
    distancias <- [[0,2,11,5,15,11,1],[2,0,7,12,4,2,15],[11,7,0,11,6,3,13],[6,12,11,0,10,2,1],[15,4,8,10,0,5,13],[11,2,3,2,5,0,14],[1,15,13,1,13,141,0]]
    V:caminho, visitados;
    distacia_percorrida <- 0; // colocando 0 para fazer o somatório dentro do para
    para i de 1 ate 7 em passo 1
	    faça
        	caminho[i] <- 0; // colocando 0 em todas as cidades do vetor para dizer que não foi visitada
     	fim para;
    leia(atual); // cidade origem
    visitados[atual] <- 1; // colocando 1 para dizer que já foi visitada
    para i de 2 ate (7) em passo 1:
        faça
            Menor <- 10000000; 
            cidade_mais_perto <- 0; // número aleatório porque a cidade mais perto não foi definida ainda
            para j de 1 ate 7 em passo 1:
                faça
                    se distancias[atual][j] < menor e visitados[j] = 0 e atual != j // menor distância e 0, para dizer que não foi visitada ainda
                        entao 
                            cidade_mais_perto <- j; 
                            menor <- distancias[i][j];
                        fim se
                fim para
            caminho[cidade_mais_perto] <- i;
            distacia_percorrida <- distacia_percorrida + distancias[atual][cidade_mais_perto]; // somando a distancia percorrida
            atual <- cidade_mais_perto;
        fim para
    caminho[num_cidades+1] <- caminho[1]; // adicionando ao vetor caminho, a cidade origem no final
    distacia_percorrida <- distacia_percorrida + distancias[atual][caminho[1]]; // calculando a distancia de voltar a cidade de orige
    escreva(caminho);
    escreva(distacia_percorrida);
Fim